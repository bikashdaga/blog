<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://ashton-sidhu.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ashton-sidhu.github.io/blog/" rel="alternate" type="text/html" /><updated>2022-06-17T17:52:58-05:00</updated><id>https://ashton-sidhu.github.io/blog/feed.xml</id><title type="html">Ashton’s Tech Tales</title><subtitle>My tech blog for tutorials, guides and opinions!</subtitle><entry><title type="html">nbdev + GitHub Codespaces: A New Literate Programming Environment</title><link href="https://ashton-sidhu.github.io/blog/codespaces" rel="alternate" type="text/html" title="nbdev + GitHub Codespaces: A New Literate Programming Environment" /><published>2020-12-10T00:00:00-06:00</published><updated>2020-12-10T00:00:00-06:00</updated><id>https://ashton-sidhu.github.io/blog/codespaces</id><author><name>&lt;a href='https://twitter.com/HamelHusain'&gt;Hamel Husain&lt;/a&gt; &amp; &lt;a href='https://twitter.com/jeremyphoward'&gt;Jeremy Howard&lt;/a&gt;</name></author><category term="codespaces" /><category term="nbdev" /><summary type="html">Today, we are going to show you how to set up a literate programming environment, allowing you to use an IDE (VS Code) and an interactive computing environment (Jupyter), without leaving your browser, for free, in under 5 minutes. You’ll even see how VSCode and Jupyter work together automatically! But first, what is literate programming? And how did I go from skeptic to a zealot of literate programming?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ashton-sidhu.github.io/blog/images/fastpages_posts/codespaces/codespaces.png" /><media:content medium="image" url="https://ashton-sidhu.github.io/blog/images/fastpages_posts/codespaces/codespaces.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introducing fastlinkcheck</title><link href="https://ashton-sidhu.github.io/blog/fastlinkcheck/" rel="alternate" type="text/html" title="Introducing fastlinkcheck" /><published>2020-11-17T00:00:00-06:00</published><updated>2020-11-17T00:00:00-06:00</updated><id>https://ashton-sidhu.github.io/blog/linkcheck</id><author><name>&lt;a href='https://twitter.com/jeremyphoward'&gt;Jeremy Howard&lt;/a&gt; and &lt;a href='https://twitter.com/HamelHusain'&gt;Hamel Husain&lt;/a&gt;</name></author><category term="nbdev" /><category term="fastlinkcheck" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ashton-sidhu.github.io/blog/images/copied_from_nb/fastlinkcheck_images/fastlinkcheck.png" /><media:content medium="image" url="https://ashton-sidhu.github.io/blog/images/copied_from_nb/fastlinkcheck_images/fastlinkcheck.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Integrating Prefect &amp;amp; Databricks to Manage your Spark Jobs</title><link href="https://ashton-sidhu.github.io/blog/prefect/databricks/etl/tutorial/guide/spark/2020/11/02/prefect-databricks.html" rel="alternate" type="text/html" title="Integrating Prefect &amp;amp; Databricks to Manage your Spark Jobs" /><published>2020-11-02T00:00:00-06:00</published><updated>2020-11-02T00:00:00-06:00</updated><id>https://ashton-sidhu.github.io/blog/prefect/databricks/etl/tutorial/guide/spark/2020/11/02/prefect-databricks</id><author><name></name></author><category term="Prefect" /><category term="Databricks" /><category term="ETL" /><category term="Tutorial" /><category term="Guide" /><category term="Spark" /><summary type="html">Prefect is a workflow management system that enables users to easily take data applications and add retries, logging, dynamic mapping, caching, failure notifications, scheduling and more — all with functional Python API. Prefect allows users to take their existing code and transform it into a DAG (Directed Acyclic Graph) with dependencies already identified [1]. It simplifies the creation of ETL pipelines and dependencies and enables users to strictly focus on the application code instead of the pipeline code (looking at you Airflow). Prefect can even create distributed pipelines to parallelize your data applications.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ashton-sidhu.github.io/blog/images/prefect_databricks/intro.png" /><media:content medium="image" url="https://ashton-sidhu.github.io/blog/images/prefect_databricks/intro.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Tutorial: Integrating Python with Compiler Languages</title><link href="https://ashton-sidhu.github.io/blog/python/data%20science/go/machine%20learning/2020/10/25/ctypes-go.html" rel="alternate" type="text/html" title="Tutorial: Integrating Python with Compiler Languages" /><published>2020-10-25T00:00:00-05:00</published><updated>2020-10-25T00:00:00-05:00</updated><id>https://ashton-sidhu.github.io/blog/python/data%20science/go/machine%20learning/2020/10/25/ctypes-go</id><author><name></name></author><category term="python" /><category term="data science" /><category term="go" /><category term="machine learning" /><summary type="html">Python - a programming language that is human readable, easy to learn, and most importantly, easy to use. It is no wonder that it is one of the most popular languages today. From being able to build web applications, create automation scripts, analyze data and build machine learning models, Python is a jack of all trades. As with anything it has its short comings which include its speed and lack of granular access to machine hardware. This is due to Python being an interpreter-based language and not a compiler-based language.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ashton-sidhu.github.io/blog/images/ctypes/architecture.png" /><media:content medium="image" url="https://ashton-sidhu.github.io/blog/images/ctypes/architecture.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">A Data Scientist’s Guide to Hacktoberfest</title><link href="https://ashton-sidhu.github.io/blog/markdown/data%20science/open%20source/hacktoberfest/ml/2020/10/08/hacktoberfest-help.html" rel="alternate" type="text/html" title="A Data Scientist’s Guide to Hacktoberfest" /><published>2020-10-08T00:00:00-05:00</published><updated>2020-10-08T00:00:00-05:00</updated><id>https://ashton-sidhu.github.io/blog/markdown/data%20science/open%20source/hacktoberfest/ml/2020/10/08/hacktoberfest-help</id><author><name></name></author><category term="markdown" /><category term="data science" /><category term="open source" /><category term="hacktoberfest" /><category term="ml" /><summary type="html">What is Hacktoberfest Open source projects are a pillar for the data industry, without them projects such as Pandas, Numpy Sci-kit Learn and the entire big data Apache stack would not exist. Hacktoberfest is a month long event where developers can contribute to open source projects on Github and receive free swag. To be eligible to receive the free swag, you must commit four successful Pull Requests on projects that have opted in to Hacktoberfest. To try and easily get the free swag, some contributors submit non meaningful contributions, leading to unhappy project maintainers.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ashton-sidhu.github.io/blog/images/hacktoberfest/bad2.png" /><media:content medium="image" url="https://ashton-sidhu.github.io/blog/images/hacktoberfest/bad2.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>